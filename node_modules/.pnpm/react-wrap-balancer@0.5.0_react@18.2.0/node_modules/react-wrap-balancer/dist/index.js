"use client"
var S=Object.create;var d=Object.defineProperty;var w=Object.getOwnPropertyDescriptor;var I=Object.getOwnPropertyNames;var W=Object.getPrototypeOf,L=Object.prototype.hasOwnProperty;var M=(t,n)=>{for(var e in n)d(t,e,{get:n[e],enumerable:!0})},E=(t,n,e,s)=>{if(n&&typeof n=="object"||typeof n=="function")for(let r of I(n))!L.call(t,r)&&r!==e&&d(t,r,{get:()=>n[r],enumerable:!(s=w(n,r))||s.enumerable});return t};var b=(t,n,e)=>(e=t!=null?S(W(t)):{},E(n||!t||!t.__esModule?d(e,"default",{value:t,enumerable:!0}):e,t)),P=t=>E(d({},"__esModule",{value:!0}),t);var C={};M(C,{Balancer:()=>O,Provider:()=>N,default:()=>Y});module.exports=P(C);var i=b(require("react"));var l=b(require("react")),y=typeof window=="undefined",f=y?l.default.useEffect:l.default.useLayoutEffect,_=0,$=()=>++_,R=!1;function A(){let[t,n]=l.default.useState(R?$:void 0);return f(()=>{t===void 0&&n(++_),R=!0},[]),t===void 0?t:`rwb-${t.toString(32)}`}function v(){return l.default.useMemo(()=>"useId"in l.default?l.default.useId:A,[])()}var m="__wrap_b",g="__wrap_o",T=(t,n,e)=>{e=e||document.querySelector(`[data-br="${t}"]`);let s=e.parentElement,r=B=>e.style.maxWidth=B+"px";e.style.maxWidth="";let o=s.clientWidth,u=s.clientHeight,a=o/2-.25,c=o+.5,p;if(o){for(r(a),a=Math.max(e.scrollWidth,a);a+1<c;)p=Math.round((a+c)/2),r(p),s.clientHeight===u?c=p:a=p;r(c*n+o*(1-n))}e.__wrap_o||(typeof ResizeObserver!="undefined"?(e.__wrap_o=new ResizeObserver(()=>{self.__wrap_b(0,+e.dataset.brr,e)})).observe(s):process.env.NODE_ENV==="development"&&console.warn("The browser you are using does not support the ResizeObserver API. Please consider add polyfill for this API to avoid potential layout shifts or upgrade your browser. Read more: https://github.com/shuding/react-wrap-balancer#browser-support-information"))},H=T.toString(),h=(t,n,e="")=>i.default.createElement("script",{suppressHydrationWarning:!0,dangerouslySetInnerHTML:{__html:(t?"":`self.${m}=${H};`)+e},nonce:n}),x=i.default.createContext(!1),N=({nonce:t,children:n})=>i.default.createElement(x.Provider,{value:!0},h(!1,t),n),O=({ratio:t=1,nonce:n,children:e,...s})=>{let r=v(),o=i.default.useRef(),u=i.default.useContext(x),a=s.as||"span";return f(()=>{o.current&&(self[m]=T)(0,t,o.current)},[e,t]),f(()=>()=>{if(!o.current)return;let c=o.current[g];c&&(c.disconnect(),delete o.current[g])},[]),process.env.NODE_ENV==="development"&&e&&!Array.isArray(e)&&typeof e=="object"&&"type"in e&&typeof e.type=="string"&&e.type!=="span"&&console.warn(`<Balancer> should not wrap <${e.type}> inside. Instead, it should directly wrap text or inline nodes.

Try changing this:
  <Balancer><${e.type}>content</${e.type}></Balancer>
To:
  <${e.type}><Balancer>content</Balancer></${e.type}>`),i.default.createElement(i.default.Fragment,null,i.default.createElement(a,{...s,"data-br":r,"data-brr":t,ref:o,style:{display:"inline-block",verticalAlign:"top",textDecoration:"inherit"},suppressHydrationWarning:!0},e),h(u,n,`self.${m}("${r}",${t})`))};if(!y&&process.env.NODE_ENV!=="production"){let t=document.querySelector("[data-next-hide-fouc]");if(t){let n=s=>{for(let r of s)for(let o of Array.from(r.removedNodes)){if(o!==t)continue;e.disconnect();let u=document.querySelectorAll("[data-br]");for(let a of Array.from(u))self[m](0,+a.dataset.brr,a)}},e=new MutationObserver(n);e.observe(document.head,{childList:!0})}}var Y=O;0&&(module.exports={Balancer,Provider});
//# sourceMappingURL=index.js.map